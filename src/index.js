
define(
  [
    'eagl/core/Batch',
    'eagl/core/Output',
    'eagl/core/Pipeline',
    'eagl/core/RenderUnit',
    'eagl/core/Renderable',
    'eagl/core/Renderer',
    'eagl/core/Technic',
    'eagl/core/Traverser',
    'eagl/core/Viewport',
    'eagl/geometry/Attribute',
    'eagl/geometry/GeomBuffer',
    'eagl/geometry/Geometry',
    'eagl/geometry/primitive/CubeGeometry',
    'eagl/geometry/primitive/planeGeometry',
    'eagl/gl/GLConfig',
    'eagl/gl/GLContext',
    'eagl/gl/GLEnum',
    'eagl/lang',
    'eagl/materials/Material',
    'eagl/materials/MaterialPass',
    'eagl/materials/common/Projection',
    'eagl/materials/common/UVVarying',
    'eagl/math/Rectangle',
    'eagl/math/mat4',
    'eagl/math/types',
    'eagl/math/vec3',
    'eagl/objects/Mesh',
    'eagl/objects/Object3D',
    'eagl/objects/Scene',
    'eagl/shaders/Program',
    'eagl/shaders/Shader',
    'eagl/shaders/ShaderPart',
    'eagl/shaders/glsl'
  ],
  function(
    Batch,
    Output,
    Pipeline,
    RenderUnit,
    Renderable,
    Renderer,
    Technic,
    Traverser,
    Viewport,
    Attribute,
    GeomBuffer,
    Geometry,
    CubeGeometry,
    planeGeometry,
    GLConfig,
    GLContext,
    GLEnum,
    lang,
    Material,
    MaterialPass,
    Projection,
    UVVarying,
    Rectangle,
    mat4,
    types,
    vec3,
    Mesh,
    Object3D,
    Scene,
    Program,
    Shader,
    ShaderPart,
    glsl
  ){

  return {
    Batch : Batch,
    Output : Output,
    Pipeline : Pipeline,
    RenderUnit : RenderUnit,
    Renderable : Renderable,
    Renderer : Renderer,
    Technic : Technic,
    Traverser : Traverser,
    Viewport : Viewport,
    Attribute : Attribute,
    GeomBuffer : GeomBuffer,
    Geometry : Geometry,
    CubeGeometry : CubeGeometry,
    planeGeometry : planeGeometry,
    GLConfig : GLConfig,
    GLContext : GLContext,
    GLEnum : GLEnum,
    lang : lang,
    Material : Material,
    MaterialPass : MaterialPass,
    Projection : Projection,
    UVVarying : UVVarying,
    Rectangle : Rectangle,
    mat4 : mat4,
    types : types,
    vec3 : vec3,
    Mesh : Mesh,
    Object3D : Object3D,
    Scene : Scene,
    Program : Program,
    Shader : Shader,
    ShaderPart : ShaderPart,
    glsl : glsl
  };

});